{"code":"!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=218)}({1:function(e,t){throw new Error(\"Module parse failed: Export 'loadList' is not defined (20:24)\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\\n| }\\n| \\n> export { loadTodayList, loadList }\\n| \\n| //Effectively, this is what should load inside the container div:\")},218:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"task\",(function(){return c})),n.d(t,\"project\",(function(){return f})),n.d(t,\"todayList\",(function(){return h}));var o=n(1);function r(e,t){if(t.length<e)throw new TypeError(e+\" argument\"+(e>1?\"s\":\"\")+\" required, but only \"+t.length+\" present\")}function a(e){r(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||\"object\"==typeof e&&\"[object Date]\"===t?new Date(e.getTime()):\"number\"==typeof e||\"[object Number]\"===t?new Date(e):(\"string\"!=typeof e&&\"[object String]\"!==t||\"undefined\"==typeof console||(console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"),console.warn((new Error).stack)),new Date(NaN))}function u(e){r(1,arguments);var t=a(e);return t.setHours(0,0,0,0),t}function i(e,t){r(2,arguments);var n=u(e),o=u(t);return n.getTime()===o.getTime()}function l(e){return r(1,arguments),i(e,Date.now())}function d(e,t){for(var n=[],o=0;o<e.length;o++){let u=e[o];u.dueDate=new Date(u.dueDate);var r=u.dueDate;r=a(r=r.getTime()- -6e4*u.dueDate.getTimezoneOffset()),console.log(r),t(r)&&n.push(u)}return n}let s=[];const c=(e,t,n)=>({title:e,description:t,dueDate:n}),f=(e,t)=>{(void 0).complete=!1;return{name:e,index:[],complete:t}},p=c(\"Walk dog\",\"Walk dog\",\"2020-04-29\"),g=c(\"R2D\",\"Walk dog\",\"2020-04-23\"),y=c(\"Workout\",\"Walk dog\",\"2020-04-29\"),m=c(\"Read\",\"Walk dog\",\"2020-04-21\"),b=c(\"Meditate\",\"Walk dog\",\"2020-04-29\");s.push(p),s.push(g),s.push(y),s.push(m),s.push(b);let h=d(s,l());Object(o.loadTodayList)(h),document.getElementById(\"submit-new-task\").addEventListener(\"click\",(function(){var e,t,n=(e=document.getElementById(\"task-name\").value,t=document.getElementById(\"task-due-date\").value,c(e,\"\",t));s.push(n),document.getElementById(\"container\").innerHTML=\"\";let r=d(s,l());Object(o.loadTodayList)(r),console.log(s)}))}});","extractedComments":[]}